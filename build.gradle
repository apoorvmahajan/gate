plugins {
  id 'io.spinnaker.project' version "$spinnakerGradleVersion" apply false
  id "org.jetbrains.kotlin.jvm" version "$kotlinVersion" apply false
  id "org.jetbrains.kotlin.plugin.allopen" version "$kotlinVersion" apply false
  id "org.jetbrains.dokka" version "0.10.1" apply false
}

allprojects {
  apply plugin: 'io.spinnaker.project'

  group = "com.netflix.spinnaker.gate"

  if ([korkVersion, fiatVersion].find { it.endsWith('-SNAPSHOT') }) {
    repositories {
      mavenLocal()
    }
  }

  // For internal-to-salesforce artifacts (e.g. kork)
  repositories {
    // Without removing jcenter/bintray, gradle fails because jcenter is no more
    // (https://status.bintray.com/) and returns a 403, and somehow gradle gives up
    // instead of querying other repos, etc.
    //
    // Ideally, we'd fix this by removing the code that adds jcenter in the first place
    // (https://github.com/spinnaker/spinnaker-gradle-project/blob/e06b62c0958e06e4e2e300ac7268f67e65bb0959/spinnaker-project-plugin/src/main/groovy/com/netflix/spinnaker/gradle/baseproject/SpinnakerBaseProjectConventionsPlugin.groovy#L24)
    // but because jcenter is gone, that project currently (8-jul-21) doesn't build, so
    // it's difficult to make changes.
    all { ArtifactRepository repo ->
      if (repo.name.toLowerCase().contains('jcenter')
          || repo.name.toLowerCase().contains('bintray')) {
        remove repo
      }
    }
    maven {
      url 'https://nexus-proxy-prd.soma.salesforce.com/nexus/content/groups/public/'
      credentials {
        username System.getenv('NEXUS_USERNAME')
        password System.getenv('NEXUS_PASSWORD')
      }
    }
  }

  if (name != "gate-bom" && name != "gate-api") {
    apply plugin: 'java-library'
    apply plugin: 'groovy'

    repositories {
      maven { url 'https://build.shibboleth.net/nexus/content/repositories/releases/' }
      maven { url 'https://repository.mulesoft.org/releases/' }
    }

    dependencies {
      implementation platform("com.salesforce.spinnaker.kork:kork-bom:$korkVersion")
      annotationProcessor platform("com.salesforce.spinnaker.kork:kork-bom:$korkVersion")
      annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
      testAnnotationProcessor platform("com.salesforce.spinnaker.kork:kork-bom:$korkVersion")
      compileOnly "org.projectlombok:lombok"
      annotationProcessor "org.projectlombok:lombok"
      testAnnotationProcessor "org.projectlombok:lombok"

      implementation "org.codehaus.groovy:groovy-all"
      implementation "net.logstash.logback:logstash-logback-encoder"
      implementation "org.jetbrains.kotlin:kotlin-reflect"

      // To fix https://nvd.nist.gov/vuln/detail/CVE-2021-27568
      // Introduced by net.minidev:json-smart used by com.jayway.jsonpath:json-path under different packages of spring framework and springboot
      // TODO: Move to kork by upgrading the version of jayway jsonpath and json-smart, or bumping up the spring framework version
      constraints {
         implementation("com.jayway.jsonpath:json-path:2.6.0")
      } // code-fix end

      testImplementation "org.spockframework:spock-core"
      testImplementation "org.spockframework:spock-spring"
      testImplementation "org.springframework.boot:spring-boot-starter-test"
      testImplementation "org.hamcrest:hamcrest-core"
      testRuntimeOnly "cglib:cglib-nodep"
      testRuntimeOnly "org.objenesis:objenesis"
    }

    configurations.all {
      exclude group: 'javax.servlet', module: 'servlet-api'
      exclude group: 'javax.servlet', module: 'javax.servlet-api'
    }
  }

  tasks.withType(JavaExec) {
    if (System.getProperty('DEBUG', 'false') == 'true') {
      jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8184'
    }
  }

  test {
    testLogging {
      exceptionFormat = 'full'
    }
  }
}

defaultTasks ':gate-web:run'
